<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>


  <!--
       - Location of the XML file that defines the root application context.
       - Applied by ContextLoaderListener.
   -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring/application-config.xml</param-value>
  </context-param>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>


  <!--
      - Servlet that dispatches request to registered handlers (Controller implementations).
  -->
  <servlet>
    <!--    DispatcherServlet 만드는 작업. 가장 먼저 Client(browser)의 요청을 받는 객체이다.
            DispatcherServlet 은 Spring container 를 만드는 작업을 해준다.
            DispatcherServlet 은 Client 의 요청을 처리하는 첫 번째 관문이다.
            DispatcherServlet 이 만들어지고 나면 HandlerMapping, HandlerAdapter, ViewResolver 도 자동으로 같이 만들어진다.
            <servlet-name>appServlet</servlet-name> 기본설정 -->
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--servlet-class 에 mapping 할 class 명 입력-->

    <init-param> <!--Servlet 의 초기 파라미터 설정-->
      <param-name>contextConfigLocation</param-name>
      <!--Spring 설정파일 부분-->
      <!--        <param-value>WEB-INF/spring/appServlet/servlet-context.xml</param-value>-->
      <param-value>/WEB-INF/mvc-config.xml</param-value>
      <!--mvc-config 를 이용해서 Spring Container 를 만든다
      SpringContainer 가 생성되면 자동으로  HandlerMapping, HandlerAdapter, ViewResolver 도 만들어짐-->
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!-- 한글 입출력 처리 Start - web.xml 첫줄 encoding="UTF-8"로 변경 필요. -->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>
      org.springframework.web.filter.CharacterEncodingFilter
    </filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <filter>
    <filter-name>loginFilter</filter-name>
    <filter-class>filter.LoginFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>loginFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

</web-app>
